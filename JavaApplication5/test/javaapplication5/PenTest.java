/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication5;

import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author Acer-PC
 */
public class PenTest {
    
    public PenTest() {
    }
    /**
     * Test of write method, of class Pen.
     */

    @Test
    public void testWrite() {
        System.out.println("write0");
        String word = "2281488322";
        Pen instance = new Pen(1000);
        String expResult = word;
        String result = instance.write(word);
        assertEquals(expResult, result);    
    }
    @Test
    public void testWrite1() {
        System.out.println("write1");
        String word = "2281488322";
        int endIndex = 5;
        Pen instance = new Pen(endIndex);
        String expResult = word.substring(0, endIndex);
        String result = instance.write(word);
        assertEquals(expResult, result);    
    }
    @Test
    public void testWrite2() {
        System.out.println("write2");
        String word = "2281488322";
        int endIndex = 0;
        Pen instance = new Pen(endIndex);
        String expResult = "";
        String result = instance.write(word);
        assertEquals(expResult, result);    
    }
    @Test
    public void testWrite3() {
        System.out.println("write3");
        String word = "2281488322";
        int volume = 8, size = 2;
        Pen instance = new Pen(volume,size);
        String expResult = word.substring(0,volume/size);
        String result = instance.write(word);
        assertEquals(expResult, result);    
    }
    @Test
    public void testWrite4() {
        System.out.println("write4");
        String word = "2281488322";
        Pen instance = new Pen(1000,-1);
        String expResult = "";
        String result = instance.write(word);
        assertEquals(expResult, result);    
    }
    @Test
    public void testWrite5() {
        System.out.println("write5");
        String word = "2281488322";
        int volume = 12, size = 2;
        Pen instance = new Pen(volume,size);
        String expResult = word.substring(0,volume/size);
        String result = instance.write(word);
        assertEquals(expResult, result);    
    }
    @Test
    public void testWrite6() {
        System.out.println("write6");
        String word = "2281488322";
        int volume = 2, size = 3;
        Pen instance = new Pen(volume,size);
        String expResult = word.substring(0,volume/size);
        String result = instance.write(word);
        assertEquals(expResult, result);    
    }
    /**
     * Test of getColor method, of class Pen.
     */
    @Test
    public void testGetColor() {
        System.out.println("getColor0");
        String expResult = "BLUE";
        Pen instance = new Pen(1000,1,expResult);
        String result = instance.getColor();
        assertEquals(expResult, result);
    }
    @Test
    public void testGetColor1() {
        System.out.println("getColor1");
        String expResult = "RED";
        Pen instance = new Pen(1000,1,expResult);
        String result = instance.getColor();
        assertEquals(expResult, result);
    }

    /**
     * Test of isWork method, of class Pen.
     */
    @Test
    public void testIsWork() {
        System.out.println("isWork");
        Pen instance = new Pen(1000);
        Boolean result = instance.isWork();
        assertTrue(result);
    }
    @Test
    public void testIsWork1() {
        System.out.println("isWork1");
        Pen instance = new Pen(-1000);
        Boolean result = instance.isWork();
        assertFalse(result);
    }

    /**
     * Test of doSomethingElse method, of class Pen.
     */
    @Test
    public void testDoSomethingElse() {
        System.out.println("doSomethingElse");
        Pen instance = new Pen(1000);
        instance.doSomethingElse();
    }
    
}
